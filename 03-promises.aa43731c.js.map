{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAEtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAe,CACnBT,WACAC,SAEEC,EAEFI,EAAQG,GAGRF,EAAOE,E,GAERR,E,IAIPL,EAAOc,iBAAiB,UAExB,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,OAAOlB,EAAOK,MAAMc,OAC5BC,EAAOF,OAAOlB,EAAOoB,KAAKD,OAC1BE,EAASH,OAAOlB,EAAOqB,OAAOF,OAE3BG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BnB,EAAcmB,EAAGL,GAASK,EAAI,GAAKF,GAChCG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBP,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBP,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const promiseValue = {\n        position,\n        delay,\n      };\n      if (shouldResolve) {\n        // Fulfill\n        resolve(promiseValue);\n      } else {\n        // Reject\n        reject(promiseValue);\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = Number(formEl.delay.value);\n  const step = Number(formEl.step.value);\n  const amount = Number(formEl.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promiseValue","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.aa43731c.js.map"}