{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAEtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAe,CACnBT,WACAC,SAEEC,EAEFI,EAAQG,GAGRF,EAAOE,E,GAERR,E,IAIPL,EAAOc,iBAAiB,UAExB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOlB,EAAOK,MAAMc,OAC5BC,EAAOF,OAAOlB,EAAOoB,KAAKD,OAC1BE,EAASH,OAAOlB,EAAOqB,OAAOF,OAMlC,GAJAG,QAAQC,IAAI,QAASN,GACrBK,QAAQC,IAAI,OAAQH,GACpBE,QAAQC,IAAI,SAAUF,GAElBD,EAAO,KAAOH,EAAQ,KAAOI,EAAS,IACxC,OAAOvB,EAAA0B,OAAOC,QAAS,wBAGvB,IAAG,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAC3BvB,EAAcuB,EAAGT,GACdU,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBP,EAAA0B,OAAOK,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBP,EAAA0B,OAAOC,QAAQ,sBAAqCK,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9DY,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const promiseValue = {\n        position,\n        delay,\n      };\n      if (shouldResolve) {\n        // Fulfill\n        resolve(promiseValue);\n      } else {\n        // Reject\n        reject(promiseValue);\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(formEl.delay.value);\n  let step = Number(formEl.step.value);\n  let amount = Number(formEl.amount.value);\n\n  console.log('delay', delay);\n  console.log('step', step);\n  console.log('amount', amount);\n\n  if (step < '0' || delay < '0' || amount < '0') {\n    return Notify.failure(`❌ Value must be >= 0`);\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promiseValue","addEventListener","event","preventDefault","delay1","Number","value","step","amount","console","log","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.eed974e1.js.map"}